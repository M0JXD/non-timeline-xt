// generated by Fast Light User Interface Designer (fluid) version 1.0300

#ifndef Track_Header_H
#define Track_Header_H
#include <FL/Fl.H>
#include "../../FL/Fl_Sometimes_Input.H"
#include "../../FL/Fl_Blink_Button.H"
#include <FL/Fl_Group.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Box.H>

class Track_Header : public Fl_Group {
public:
  Track_Header(int X, int Y, int W, int H, const char *L = 0);
private:
  Fl_Group *box_group;
public:
  Fl_Sometimes_Input *name_input;
  Fl_Button *track_inputs_indicator;
  Fl_Button *track_outputs_indicator;
  Fl_Button *menu_button;
  Fl_Button *overlay_controls_button;
  Fl_Button *show_all_takes_button;
  Fl_Button *rec_button;
  Fl_Button *mute_button;
  Fl_Button *solo_button;
  Fl_Box *input_connector_handle;
  Fl_Box *output_connector_handle;
  Fl_Box *color_box;
  virtual void draw();
};
#include <FL/Fl_Output.H>
#include <FL/Fl_Menu_Button.H>

class Control_Sequence_Header : public Fl_Group {
public:
  Control_Sequence_Header(int X, int Y, int W, int H, const char *L = 0);
  Fl_Sometimes_Input *name_input;
  Fl_Button *menu_button;
  Fl_Blink_Button *outputs_indicator;
  Fl_Output *osc_name_output;
  Fl_Menu_Button *osc_connect_menu;
  Fl_Button *delete_button;
};

class Audio_Sequence_Header : public Fl_Group {
public:
  Audio_Sequence_Header(int X, int Y, int W, int H, const char *L = 0);
  Fl_Sometimes_Input *name_input;
  Fl_Button *delete_button;
  Fl_Button *promote_button;
};
#endif
